/**
 * Mimir
 * APIs
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AuthorItem', 'model/BasicShare', 'model/QuestionItem', 'model/QuestionResponse', 'model/RichShareContent', 'model/SharePublishTime', 'model/SimpleUser', 'model/TagResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AuthorItem'), require('./BasicShare'), require('./QuestionItem'), require('./QuestionResponse'), require('./RichShareContent'), require('./SharePublishTime'), require('./SimpleUser'), require('./TagResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Mimir) {
      root.Mimir = {};
    }
    root.Mimir.ShareRepItem = factory(root.Mimir.ApiClient, root.Mimir.AuthorItem, root.Mimir.BasicShare, root.Mimir.QuestionItem, root.Mimir.QuestionResponse, root.Mimir.RichShareContent, root.Mimir.SharePublishTime, root.Mimir.SimpleUser, root.Mimir.TagResponse);
  }
}(this, function(ApiClient, AuthorItem, BasicShare, QuestionItem, QuestionResponse, RichShareContent, SharePublishTime, SimpleUser, TagResponse) {
  'use strict';




  /**
   * The ShareRepItem model module.
   * @module model/ShareRepItem
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ShareRepItem</code>.
   * @alias module:model/ShareRepItem
   * @class
   * @extends module:model/BasicShare
   * @implements module:model/AuthorItem
   * @implements module:model/QuestionItem
   * @implements module:model/SharePublishTime
   */
  var exports = function() {
    var _this = this;
    BasicShare.call(_this);
    AuthorItem.call(_this);
    QuestionItem.call(_this);
    SharePublishTime.call(_this);

  };

  /**
   * Constructs a <code>ShareRepItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ShareRepItem} obj Optional instance to populate.
   * @return {module:model/ShareRepItem} The populated <code>ShareRepItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      BasicShare.constructFromObject(data, obj);
      AuthorItem.constructFromObject(data, obj);
      QuestionItem.constructFromObject(data, obj);
      SharePublishTime.constructFromObject(data, obj);
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], [TagResponse]);
      }
    }
    return obj;
  }

  exports.prototype = Object.create(BasicShare.prototype);
  exports.prototype.constructor = exports;

  /**
   * @member {Array.<module:model/TagResponse>} tags
   */
  exports.prototype['tags'] = undefined;

  // Implement AuthorItem interface:
  /**
   * @member {module:model/SimpleUser} author
   */
exports.prototype['author'] = undefined;

  // Implement QuestionItem interface:
  /**
   * @member {module:model/QuestionResponse} question
   */
exports.prototype['question'] = undefined;

  // Implement SharePublishTime interface:
  /**
   * @member {Date} published_at
   */
exports.prototype['published_at'] = undefined;



  return exports;
}));


