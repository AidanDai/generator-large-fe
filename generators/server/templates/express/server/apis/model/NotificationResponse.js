/**
 * Mimir
 * APIs
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ExtraCount', 'model/UserAvatar'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ExtraCount'), require('./UserAvatar'));
  } else {
    // Browser globals (root is window)
    if (!root.Mimir) {
      root.Mimir = {};
    }
    root.Mimir.NotificationResponse = factory(root.Mimir.ApiClient, root.Mimir.ExtraCount, root.Mimir.UserAvatar);
  }
}(this, function(ApiClient, ExtraCount, UserAvatar) {
  'use strict';




  /**
   * The NotificationResponse model module.
   * @module model/NotificationResponse
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>NotificationResponse</code>.
   * @alias module:model/NotificationResponse
   * @class
   */
  var exports = function() {
    var _this = this;
















  };

  /**
   * Constructs a <code>NotificationResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NotificationResponse} obj Optional instance to populate.
   * @return {module:model/NotificationResponse} The populated <code>NotificationResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('created_at_date_string')) {
        obj['created_at_date_string'] = ApiClient.convertToType(data['created_at_date_string'], 'String');
      }
      if (data.hasOwnProperty('origin')) {
        obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
      }
      if (data.hasOwnProperty('activity')) {
        obj['activity'] = ApiClient.convertToType(data['activity'], 'String');
      }
      if (data.hasOwnProperty('activity_id')) {
        obj['activity_id'] = ApiClient.convertToType(data['activity_id'], 'Number');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('destination')) {
        obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
      }
      if (data.hasOwnProperty('destination_id')) {
        obj['destination_id'] = ApiClient.convertToType(data['destination_id'], 'String');
      }
      if (data.hasOwnProperty('trigger_uid')) {
        obj['trigger_uid'] = ApiClient.convertToType(data['trigger_uid'], 'String');
      }
      if (data.hasOwnProperty('reciever_uid')) {
        obj['reciever_uid'] = ApiClient.convertToType(data['reciever_uid'], 'String');
      }
      if (data.hasOwnProperty('clicked')) {
        obj['clicked'] = ApiClient.convertToType(data['clicked'], 'Boolean');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('avatar')) {
        obj['avatar'] = UserAvatar.constructFromObject(data['avatar']);
      }
      if (data.hasOwnProperty('extra_info')) {
        obj['extra_info'] = ExtraCount.constructFromObject(data['extra_info']);
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * do not strptime this
   * @member {String} created_at_date_string
   */
  exports.prototype['created_at_date_string'] = undefined;
  /**
   * origin text
   * @member {String} origin
   */
  exports.prototype['origin'] = undefined;
  /**
   * reply/comment/ask/answer
   * @member {String} activity
   */
  exports.prototype['activity'] = undefined;
  /**
   * @member {Number} activity_id
   */
  exports.prototype['activity_id'] = undefined;
  /**
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * @member {String} destination
   */
  exports.prototype['destination'] = undefined;
  /**
   * @member {String} destination_id
   */
  exports.prototype['destination_id'] = undefined;
  /**
   * @member {String} trigger_uid
   */
  exports.prototype['trigger_uid'] = undefined;
  /**
   * @member {String} reciever_uid
   */
  exports.prototype['reciever_uid'] = undefined;
  /**
   * set to True if user has really clicked into the link to check this notification.
   * @member {Boolean} clicked
   */
  exports.prototype['clicked'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {module:model/UserAvatar} avatar
   */
  exports.prototype['avatar'] = undefined;
  /**
   * @member {module:model/ExtraCount} extra_info
   */
  exports.prototype['extra_info'] = undefined;



  return exports;
}));


