/**
 * Mimir
 * APIs
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GroupResponse', 'model/RichQuestionContent', 'model/UserResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GroupResponse'), require('./RichQuestionContent'), require('./UserResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Mimir) {
      root.Mimir = {};
    }
    root.Mimir.QuestionResponse = factory(root.Mimir.ApiClient, root.Mimir.GroupResponse, root.Mimir.RichQuestionContent, root.Mimir.UserResponse);
  }
}(this, function(ApiClient, GroupResponse, RichQuestionContent, UserResponse) {
  'use strict';




  /**
   * The QuestionResponse model module.
   * @module model/QuestionResponse
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>QuestionResponse</code>.
   * @alias module:model/QuestionResponse
   * @class
   */
  var exports = function() {
    var _this = this;














  };

  /**
   * Constructs a <code>QuestionResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuestionResponse} obj Optional instance to populate.
   * @return {module:model/QuestionResponse} The populated <code>QuestionResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('uid_author')) {
        obj['uid_author'] = ApiClient.convertToType(data['uid_author'], 'String');
      }
      if (data.hasOwnProperty('answer_id')) {
        obj['answer_id'] = ApiClient.convertToType(data['answer_id'], 'Number');
      }
      if (data.hasOwnProperty('group_id')) {
        obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
      }
      if (data.hasOwnProperty('up_count')) {
        obj['up_count'] = ApiClient.convertToType(data['up_count'], 'Number');
      }
      if (data.hasOwnProperty('is_check')) {
        obj['is_check'] = ApiClient.convertToType(data['is_check'], 'Boolean');
      }
      if (data.hasOwnProperty('is_anonymous')) {
        obj['is_anonymous'] = ApiClient.convertToType(data['is_anonymous'], 'Boolean');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('had_up')) {
        obj['had_up'] = ApiClient.convertToType(data['had_up'], 'Boolean');
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = ApiClient.convertToType(data['links'], [RichQuestionContent]);
      }
      if (data.hasOwnProperty('author')) {
        obj['author'] = UserResponse.constructFromObject(data['author']);
      }
      if (data.hasOwnProperty('group')) {
        obj['group'] = GroupResponse.constructFromObject(data['group']);
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {String} uid_author
   * @default ''
   */
  exports.prototype['uid_author'] = '';
  /**
   * @member {Number} answer_id
   */
  exports.prototype['answer_id'] = undefined;
  /**
   * @member {Number} group_id
   */
  exports.prototype['group_id'] = undefined;
  /**
   * @member {Number} up_count
   */
  exports.prototype['up_count'] = undefined;
  /**
   * @member {Boolean} is_check
   */
  exports.prototype['is_check'] = undefined;
  /**
   * @member {Boolean} is_anonymous
   * @default false
   */
  exports.prototype['is_anonymous'] = false;
  /**
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * @member {Boolean} had_up
   * @default false
   */
  exports.prototype['had_up'] = false;
  /**
   * @member {Array.<module:model/RichQuestionContent>} links
   */
  exports.prototype['links'] = undefined;
  /**
   * @member {module:model/UserResponse} author
   */
  exports.prototype['author'] = undefined;
  /**
   * @member {module:model/GroupResponse} group
   */
  exports.prototype['group'] = undefined;



  return exports;
}));


