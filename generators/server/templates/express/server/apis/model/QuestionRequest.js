/**
 * Mimir
 * APIs
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/RichQuestionContent'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./RichQuestionContent'));
  } else {
    // Browser globals (root is window)
    if (!root.Mimir) {
      root.Mimir = {};
    }
    root.Mimir.QuestionRequest = factory(root.Mimir.ApiClient, root.Mimir.RichQuestionContent);
  }
}(this, function(ApiClient, RichQuestionContent) {
  'use strict';




  /**
   * The QuestionRequest model module.
   * @module model/QuestionRequest
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>QuestionRequest</code>.
   * @alias module:model/QuestionRequest
   * @class
   * @param title {String} 
   * @param contentType {module:model/QuestionRequest.ContentTypeEnum} 
   */
  var exports = function(title, contentType) {
    var _this = this;

    _this['title'] = title;
    _this['content_type'] = contentType;


  };

  /**
   * Constructs a <code>QuestionRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuestionRequest} obj Optional instance to populate.
   * @return {module:model/QuestionRequest} The populated <code>QuestionRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('content_type')) {
        obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
      }
      if (data.hasOwnProperty('is_anonymous')) {
        obj['is_anonymous'] = ApiClient.convertToType(data['is_anonymous'], 'Boolean');
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = ApiClient.convertToType(data['links'], [RichQuestionContent]);
      }
    }
    return obj;
  }

  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {module:model/QuestionRequest.ContentTypeEnum} content_type
   */
  exports.prototype['content_type'] = undefined;
  /**
   * @member {Boolean} is_anonymous
   * @default false
   */
  exports.prototype['is_anonymous'] = false;
  /**
   * @member {Array.<module:model/RichQuestionContent>} links
   */
  exports.prototype['links'] = undefined;


  /**
   * Allowed values for the <code>content_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ContentTypeEnum = {
    /**
     * value: "text"
     * @const
     */
    "text": "text",
    /**
     * value: "image"
     * @const
     */
    "image": "image",
    /**
     * value: "link"
     * @const
     */
    "link": "link"  };


  return exports;
}));


